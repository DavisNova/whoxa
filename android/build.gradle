buildscript {
    // 🔧 统一Kotlin版本，修复版本冲突
    ext.kotlin_version = '1.8.22'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.13'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
// subprojects {
//     afterEvaluate { project ->
//         if (project.plugins.hasPlugin("com.android.application") ||
//                 project.plugins.hasPlugin("com.android.library")) {
//             project.android {
//                 compileSdkVersion 34
//                 buildToolsVersion "34.0.0"
//             }
//         }
//     }
// }

subprojects {
    afterEvaluate { project ->
        if (project.plugins.hasPlugin("com.android.application") ||
            project.plugins.hasPlugin("com.android.library")) {
            project.android {
                compileSdkVersion 34
                buildToolsVersion "34.0.0"
                
                // Add these lines for Java compatibility
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }
            }
            
            // 🔧 修复Kotlin跨盘符路径问题的特殊配置
            project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
                kotlinOptions {
                    jvmTarget = '17'
                    // 禁用增量编译以避免跨盘符路径问题
                    incremental = false
                    // 添加编译器参数
                    freeCompilerArgs += [
                        "-Xno-param-assertions",
                        "-Xno-call-assertions",
                        "-Xno-receiver-assertions"
                    ]
                }
                // 强制非增量编译
                incremental = false
            }
        }
    }
}


subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
